//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EdBox.Web
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Assessment> Assessments { get; set; }
        public virtual DbSet<Bill> Bills { get; set; }
        public virtual DbSet<Class> Classes { get; set; }
        public virtual DbSet<ClassMap> ClassMaps { get; set; }
        public virtual DbSet<ClassSubject> ClassSubjects { get; set; }
        public virtual DbSet<ClassSubjectMemberResult> ClassSubjectMemberResults { get; set; }
        public virtual DbSet<Credential> Credentials { get; set; }
        public virtual DbSet<CredentialMap> CredentialMaps { get; set; }
        public virtual DbSet<EducationalPeriod> EducationalPeriods { get; set; }
        public virtual DbSet<PinBatch> PinBatches { get; set; }
        public virtual DbSet<PinBatchMember> PinBatchMembers { get; set; }
        public virtual DbSet<ResultRaw> ResultRaws { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<StudentAttendance> StudentAttendances { get; set; }
        public virtual DbSet<StudentCommentFromTeacher> StudentCommentFromTeachers { get; set; }
        public virtual DbSet<StudentRating> StudentRatings { get; set; }
        public virtual DbSet<StudentSubjectMap> StudentSubjectMaps { get; set; }
        public virtual DbSet<SubEducationalPeriod> SubEducationalPeriods { get; set; }
        public virtual DbSet<SubjectMap> SubjectMaps { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<UploadHistory> UploadHistories { get; set; }
    
        public virtual ObjectResult<GetStudentPosition_Result> GetStudentPosition(string studentId, Nullable<int> classId, Nullable<bool> isSession)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(string));
    
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("classId", classId) :
                new ObjectParameter("classId", typeof(int));
    
            var isSessionParameter = isSession.HasValue ?
                new ObjectParameter("isSession", isSession) :
                new ObjectParameter("isSession", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentPosition_Result>("GetStudentPosition", studentIdParameter, classIdParameter, isSessionParameter);
        }
    }
}
